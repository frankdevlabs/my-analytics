# ============================================================================
# Server Deployment Configuration
# ============================================================================
# This file contains configuration for automated server deployment scripts.
# Copy this file to .env.server and fill in your values.
#
# SECURITY WARNING:
# - Never commit .env.server to version control
# - Use strong passwords and random secrets
# - Keep this file secure on your local machine
# ============================================================================

# ----------------------------------------------------------------------------
# Server Connection
# ----------------------------------------------------------------------------
# SSH connection details for deployment server

# Server IP address or hostname
SERVER_HOST=198.51.100.50

# SSH user with sudo privileges (e.g., supergoose, ubuntu, admin)
SERVER_USER=supergoose

# SSH port (default: 22)
SERVER_PORT=22

# Path where application will be deployed on server
# Default: /home/$SERVER_USER/my-analytics
DEPLOY_PATH=/home/supergoose/my-analytics

# ----------------------------------------------------------------------------
# Domain Configuration
# ----------------------------------------------------------------------------
# Domain name for your analytics application

# Full domain name (e.g., analytics.franksblog.nl, analytics.example.com)
DOMAIN=analytics.franksblog.nl

# Application URL (CRITICAL: Must use HTTPS in production)
# This is used by NextAuth.js for callbacks and redirects
# Format: https://your-domain.com (no trailing slash)
APP_URL=https://analytics.franksblog.nl

# ----------------------------------------------------------------------------
# SSL/TLS Certificates
# ----------------------------------------------------------------------------
# Cloudflare Origin Server certificates from local .env file
# These are automatically read from your local .env during deployment

# Origin Server Certificate (from Cloudflare dashboard)
# Located in local .env as: CLOUDFLARE_ORIGIN_SERVER_CERTIFICATE
# Scripts will read from: /Users/frankdevlab/WebstormProjects/my-analytics/.env

# Origin Server Private Key (from Cloudflare dashboard)
# Located in local .env as: CLOUDFLARE_ORIGIN_SERVER_PRIVATE_KEY
# Scripts will read from: /Users/frankdevlab/WebstormProjects/my-analytics/.env

# ----------------------------------------------------------------------------
# Database Configuration
# ----------------------------------------------------------------------------
# PostgreSQL database settings (runs in Docker)

# PostgreSQL version (default: 17.6)
POSTGRES_VERSION=17.6

# PostgreSQL database name
POSTGRES_DB=my_analytics

# PostgreSQL user
POSTGRES_USER=postgres

# PostgreSQL password (SECURITY: Use strong password with 16+ characters)
# Generate with: openssl rand -base64 24
POSTGRES_PASSWORD=YOUR_SECURE_PASSWORD_HERE

# PostgreSQL port (default: 5432)
POSTGRES_PORT=5432

# PostgreSQL host (default: localhost when using Docker)
POSTGRES_HOST=localhost

# Full DATABASE_URL (auto-constructed if not provided)
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# ----------------------------------------------------------------------------
# Redis Configuration
# ----------------------------------------------------------------------------
# Redis cache settings (runs in Docker)

# Redis version (default: 7.4)
REDIS_VERSION=7.4

# Redis port (default: 6379)
REDIS_PORT=6379

# Redis host (default: localhost when using Docker)
REDIS_HOST=localhost

# Redis password (optional, leave empty for no password)
REDIS_PASSWORD=

# Full REDIS_URL (auto-constructed if not provided)
# Format: redis://HOST:PORT or redis://:PASSWORD@HOST:PORT
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}

# ----------------------------------------------------------------------------
# Authentication Configuration
# ----------------------------------------------------------------------------
# NextAuth.js settings

# AUTH_SECRET - Random string for JWT signing (minimum 32 characters)
# Generate with: openssl rand -base64 32
# CRITICAL: Never reuse across environments, generate unique for each server
AUTH_SECRET=YOUR_RANDOM_SECRET_HERE

# AUTH_URL - Application URL for NextAuth.js (should match APP_URL)
# CRITICAL: Must use HTTPS in production
AUTH_URL=${APP_URL}

# ----------------------------------------------------------------------------
# First User Configuration
# ----------------------------------------------------------------------------
# Credentials for the initial admin account
# This user is created automatically during deployment

# Email address for first user (must be valid email format)
FIRST_USER_EMAIL=admin@example.com

# Password for first user (minimum 8 characters, use strong password)
# SECURITY: Use strong password with uppercase, lowercase, numbers, symbols
FIRST_USER_PASSWORD=YOUR_FIRST_USER_PASSWORD_HERE

# Display name for first user
FIRST_USER_NAME=Admin

# ----------------------------------------------------------------------------
# Data Retention Configuration
# ----------------------------------------------------------------------------
# How long to keep pageview data before automatic cleanup

# Number of months to retain data (default: 24)
DATA_RETENTION_MONTHS=24

# ----------------------------------------------------------------------------
# MaxMind GeoIP Configuration (Optional)
# ----------------------------------------------------------------------------
# GeoIP database for country-level geolocation
# Sign up for free key at: https://www.maxmind.com/en/geolite2/signup

# MaxMind license key (optional, leave empty to skip GeoIP)
# Free tier provides GeoLite2-Country database
MAXMIND_LICENSE_KEY=

# ----------------------------------------------------------------------------
# Node.js Configuration
# ----------------------------------------------------------------------------
# Node.js runtime settings

# Node.js version to install (via NVM)
NODE_VERSION=20.10.0

# npm version (bundled with Node.js, auto-detected)
# Typically v10.2.3 or similar for Node.js v20.10.0

# Node environment (default: production)
NODE_ENV=production

# Application port (default: 3000)
# This is the port Next.js listens on (proxied by nginx)
APP_PORT=3000

# ----------------------------------------------------------------------------
# Deployment Options
# ----------------------------------------------------------------------------
# Control deployment behavior

# Enable Docker auto-start on boot (default: true)
DOCKER_AUTOSTART=true

# Enable systemd service auto-start on boot (default: true)
SERVICE_AUTOSTART=true

# Enable UFW firewall (default: true)
# SECURITY: Recommended to keep enabled
UFW_ENABLED=true

# Enable Cloudflare IP whitelist in UFW (default: true)
# SECURITY: Recommended to keep enabled (only allows Cloudflare IPs)
CLOUDFLARE_WHITELIST=true

# Run database migrations during deployment (default: true)
RUN_MIGRATIONS=true

# Build application during deployment (default: true)
BUILD_APP=true

# Create first user during deployment (default: true)
CREATE_FIRST_USER=true

# ----------------------------------------------------------------------------
# Backup Configuration (Optional)
# ----------------------------------------------------------------------------
# Automated backup settings (future feature)

# Enable automated backups (default: false)
ENABLE_BACKUPS=false

# Backup frequency in hours (default: 24)
BACKUP_FREQUENCY=24

# Number of backups to retain (default: 7)
BACKUP_RETENTION=7

# Backup destination path (default: /home/$SERVER_USER/backups)
BACKUP_PATH=/home/supergoose/backups

# ----------------------------------------------------------------------------
# Monitoring Configuration (Optional)
# ----------------------------------------------------------------------------
# Monitoring and alerting settings (future feature)

# Enable monitoring (default: false)
ENABLE_MONITORING=false

# Alert email address (receives alerts for service failures)
ALERT_EMAIL=

# ----------------------------------------------------------------------------
# Advanced Settings
# ----------------------------------------------------------------------------
# Advanced configuration (usually don't need to change)

# Nginx worker processes (default: auto = number of CPU cores)
NGINX_WORKER_PROCESSES=auto

# Nginx worker connections per process (default: 2048)
NGINX_WORKER_CONNECTIONS=2048

# Nginx rate limiting - general (requests per second)
NGINX_RATE_LIMIT_GENERAL=10

# Nginx rate limiting - API (requests per second)
NGINX_RATE_LIMIT_API=30

# PostgreSQL shared_buffers (default: 256MB)
POSTGRES_SHARED_BUFFERS=256MB

# PostgreSQL max_connections (default: 100)
POSTGRES_MAX_CONNECTIONS=100

# Redis maxmemory (default: 256mb)
REDIS_MAXMEMORY=256mb

# Redis maxmemory-policy (default: allkeys-lru)
REDIS_MAXMEMORY_POLICY=allkeys-lru

# ============================================================================
# Configuration Complete
# ============================================================================
# After filling in this file:
# 1. Save as deployment/.env.server (remove .example extension)
# 2. Verify all required fields are filled
# 3. Test SSH connection: ssh $SERVER_USER@$SERVER_HOST
# 4. Run deployment: cd deployment/scripts && sudo bash deploy-all.sh
# ============================================================================
